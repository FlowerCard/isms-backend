<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isms.ismsbackend.dao.WorksiteDao">
  <resultMap id="BaseResultMap" type="com.isms.ismsbackend.entity.Worksite">
    <id column="work_id" jdbcType="INTEGER" property="workId" />
    <result column="work_name" jdbcType="VARCHAR" property="workName" />
    <result column="work_addr" jdbcType="VARCHAR" property="workAddr" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" javaType="DATE" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <association property="city" javaType="com.isms.ismsbackend.entity.City">
      <id column="city_id" jdbcType="INTEGER" property="cityId" />
      <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    work_id, work_name, work_addr, city_id, u_id, create_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from worksite
    where work_id = #{workId,jdbcType=INTEGER} and is_delete != 1
  </select>
  <select id="selectByUId" parameterType="integer" resultMap="BaseResultMap">
    select
      worksite.work_id work_id,
      worksite.work_name work_name,
      worksite.work_addr work_addr,
      worksite.city_id city_id,
      worksite.u_id u_id,
      worksite.create_time create_time,
      worksite.update_time update_time,
      worksite.is_delete is_delete,
      c.city_name
    from worksite , city c
    where worksite.city_id = c.city_id
        and worksite.u_id = #{u_id,jdbcType=INTEGER} and worksite.is_delete != 1
  </select>
  <select id="selectBySearch" resultMap="BaseResultMap">
    select
      worksite.work_id work_id,
      worksite.work_name work_name,
      worksite.work_addr work_addr,
      worksite.city_id city_id,
      worksite.u_id u_id,
      worksite.create_time create_time,
      worksite.update_time update_time,
      worksite.is_delete is_delete,
      c.city_name
    from worksite , city c
    where worksite.city_id = c.city_id
      and worksite.u_id = #{u_id} 
      and worksite.is_delete != 1
      and worksite.work_name like concat('%',#{work_name},'%')
    <if test="city_id != null">
      and worksite.city_id = #{city_id}
    </if>
  </select>
  <select id="selectByWorkName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from worksite
    where work_name = #{workName,jdbcType=VARCHAR} and is_delete != 1
  </select>

  <select id="selectByCityId" parameterType="integer" resultType="int">
    select count(1) from worksite where city_id = #{cityId}
  </select>


  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from worksite
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from worksite
    where work_id = #{workId,jdbcType=INTEGER}
  </delete>
  <update id="setDelete"  parameterType="integer">
    update worksite set is_delete = 1 where work_id = #{workId}
  </update>
  <insert id="insert" keyColumn="work_id" keyProperty="workId" parameterType="com.isms.ismsbackend.entity.Worksite" useGeneratedKeys="true">
    insert into worksite (work_name, work_addr, city_id, u_id, create_time, update_time, is_delete)
    values (#{workName,jdbcType=VARCHAR}, #{workAddr,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, 
      #{uId,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE},, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="work_id" keyProperty="workId" parameterType="com.isms.ismsbackend.entity.Worksite" useGeneratedKeys="true">
    insert into worksite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workName != null">
        work_name,
      </if>
      <if test="workAddr != null">
        work_addr,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workName != null">
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="workAddr != null">
        #{workAddr,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.isms.ismsbackend.entity.Worksite">
    update worksite
    <set>
      <if test="workName != null">
        work_name = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="workAddr != null">
        work_addr = #{workAddr,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isms.ismsbackend.entity.Worksite">
    update worksite
    set work_name = #{workName,jdbcType=VARCHAR},
      work_addr = #{workAddr,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      u_id = #{uId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
</mapper>